- keys:
    - ASPNET
  instrumentedLibraries:
    - name: ASP.NET Framework (.NET Framework)
      supportedVersions: See :ref:`dotnet-otel-versions`
  comment: MVC / WebApi (Only integrated pipeline mode supported). Metrics requires trace instrumentation.
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: ASP.NET Instrumentation for OpenTelemetry
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AspNet
      version: 1.0.0-rc9.9
      stability: beta
    - name: ASP.NET Telemetry HttpModule for OpenTelemetry
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.AspNet.TelemetryHttpModule
      version: 1.0.0-rc9.9
      stability: beta
  toDoComment: supportedVersions with ref link
  signals:
    - traces: 
    - metrics:
        - metric: http.server.duration_{bucket|count|sum}
          type: Cumulative counters (histogram)
          description: Duration of the inbound HTTP request, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs.
- keys:
    - ASPNETCORE
  instrumentedLibraries:
    - name: ASP.NET Core
      supportedVersions: See :ref:`dotnet-otel-versions`
  comment: Metrics automatically activates `Microsoft.AspNetCore.Hosting.HttpRequestIn` spans.
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: ASP.NET Core Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.AspNetCore
      version: 1.5.1-beta.1
      stability: beta
  toDoComment: reflink in supportedVersions
  signals:
    - traces: 
    - metrics:
        - metric: http.server.duration_{bucket|count|sum}
          type: Cumulative counters (histogram)
          description: Duration of the inbound HTTP request, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs.
- keys:
    - AZURE
  instrumentedLibraries:
    - name: Azure SDK
      supportedVersions: '`Azure.` prefixed packages, released after October 1, 2021'
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - ELASTICSEARCH
  instrumentedLibraries:
    - name: Elastic.Clients.Elasticsearch
      supportedVersions: 8.0.0 and higher
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - ENTITYFRAMEWORKCORE
  instrumentedLibraries:
    - name: Microsoft.EntityFrameworkCore
      supportedVersions: 6.0.12 and higher
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: EntityFrameworkCore Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.EntityFrameworkCore
      version: 1.0.0-beta.7
      stability: beta
  signals:
    - traces: 
- keys:
    - GRAPHQL
  instrumentedLibraries:
    - name: GraphQL
      supportedVersions: 7.5.0 and higher
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - GRPCNETCLIENT
  instrumentedLibraries:
    - name: Grpc.Net.Client
      supportedVersions: 2.52.0 to 3.0.0
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: Grpc.Net.Client Instrumentation for OpenTelemetry
      link: https://github.com/open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.GrpcNetClient
      version: 1.5.1-beta.1
      stability: beta
  signals:
    - traces: 
- keys:
    - HTTPCLIENT
  instrumentedLibraries:
    - name: System.Net.Http.HttpClient
      supportedVersions: See :ref:`dotnet-otel-versions`
    - name: System.Net.HttpWebRequest
      supportedVersions: See :ref:`dotnet-otel-versions`
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: HttpClient and HttpWebRequest instrumentation for OpenTelemetry
      link: https://github.com/open-telemetry/opentelemetry-dotnet/tree/main/src/OpenTelemetry.Instrumentation.Http
      version: 1.5.1-beta.1
      stability: beta
  toDoComment: how to handle two libraries? convert to array?, reflink in versions
  signals:
    - traces: 
    - metrics:
        - metric: http.client.duration_{bucket|count|sum}
          type: Cumulative counters (histogram)
          description: Duration of outbound HTTP requests, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs.
        - metric: http.server.duration_{bucket|count|sum}
          type: Cumulative counters (histogram)
          description: Duration of the inbound HTTP request, in the form of count, sum, and histogram buckets. This metric originates multiple metric time series, which might result in increased data ingestion costs.
- keys:
    - MASSTRANSIT
  instrumentedLibraries:
    - name: MassTransit
      supportedVersions: 8.0.0 and higher
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - MONGODB
  instrumentedLibraries:
    - name: MongoDB.Driver.Core
      supportedVersions: 2.13.3 to 3.0.0
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - MYSQLCONNECTOR
  instrumentedLibraries:
    - name: MySqlConnector
      supportedVersions: 2.0.0 and higher
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - MYSQLDATA
  instrumentedLibraries:
    - name: MySql.Data
      supportedVersions: 8.1.0 and higher
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - NPGSQL
  instrumentedLibraries:
    - name: Npgsql
      supportedVersions: 6.0.0 and higher
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
- keys:
    - NSERVICEBUS
  instrumentedLibraries:
    - name: NServiceBus
      supportedVersions: 8.0.0 and higher
  stability: beta
  supportabilityLevel: third-party
  signals:
    - traces: 
    - metrics:
        - metric: nservicebus.messaging.successes
          type: Cumulative counter
          description: Number of messages successfully processed by the endpoint.
        - metric: nservicebus.messaging.fetches
          type: Cumulative counter
          description: Number of messages retrieved from the queue by the endpoint.
        - metric: nservicebus.messaging.failures
          type: Cumulative counter
          description: Number of messages unsuccessfully processed by the endpoint.
- keys:
    - QUARTZ
  instrumentedLibraries:
    - name: Quartz
      supportedVersions: 3.4.0 and higher
  comment: Not supported on .NET Framework 4.7.1 and lower
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: QuartzNET Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Quartz
      version: 1.0.0-alpha.3
      stability: alpha
  signals:
    - traces: 
- keys:
    - STACKEXCHANGEREDIS
  instrumentedLibraries:
    - name: StackExchange.Redis
      supportedVersions: 2.0.405 to 3.0.0
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: StackExchange.Redis Instrumentation for OpenTelemetry
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.StackExchangeRedis
      version: 1.0.0-rc9.10
      stability: beta
  signals:
    - traces: 
- keys:
    - WCFCLIENT
    - WCFSERVICE
  instrumentedLibraries:
    - name: System.ServiceModel
      supportedVersions: 4.7.0 and higher of `System.ServiceModel.Primitives`
  comment: Service side not supported on .NET. `WCFCLIENT for client side instrumentation and `WCFSERVICE` for service side instrumentation
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: WCF Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Wcf
      version: 1.0.0-rc.12
      stability: beta
  signals:
    - traces: 
- keys:
    - NETRUNTIME
  instrumentedLibraries:
    - name: .NET runtime
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: Runtime Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Runtime
      version: 1.5.1
      stability: stable
  signals:
    - metrics:
        - metric: process.runtime.dotnet.gc.collections.count
          type: Cumulative counter
          description: Number of garbage collections since the process started.
        - metric: process.runtime.dotnet.gc.heap.size
          type: Gauge
          description: Heap size, as observed during the last garbage collection. Only available for .NET 6 or higher.
        - metric: rocess.runtime.dotnet.gc.heap.fragmentation.size
          type: Gauge
          description: Heap fragmentation, as observed during the last garbage collection. Only available for .NET 7 or higher.
        - metric: process.runtime.dotnet.gc.objects.size
          type: Gauge
          description: Count of bytes currently in use by live objects in the GC heap.
        - metric: process.runtime.dotnet.gc.allocations.size
          type: Cumulative counter
          description: Count of bytes allocated on the managed GC heap since the process started. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.gc.committed_memory.size
          type: Gauge
          description: Amount of committed virtual memory for the managed GC heap, as observed during the last garbage collection. Only available for .NET 6 and higher.
        - metric: process.runtime.dotnet.gc.duration
          type: Cumulative counter
          description: The total amount of time paused in GC since the process start. Only available for .NET 7 and higher.
        - metric: process.runtime.dotnet.monitor.lock_contention.count
          type: Cumulative counter
          description: Contentions count when trying to acquire a monitor lock since the process started.
        - metric: process.runtime.dotnet.thread_pool.threads.count
          type: Cumulative counter
          description: Number of thread pool threads, as observed during the last measurement. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.thread_pool.completed_items.count
          type: Cumulative counter
          description: Number of work items processed by the thread pool since the process started. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.thread_pool.queue.length
          type: Gauge
          description: Number of work items currently queued for processing by the thread pool. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.jit.il_compiled.size
          type: Cumulative counter
          description: Bytes of intermediate language that have been compiled since the process started. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.jit.methods_compiled.count
          type: Cumulative counter
          description: Number of times the JIT compiler compiled a method since the process started. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.jit.compilation_time
          type: Cumulative counter
          description: Amount of time the compiler spent compiling methods since the process started. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.timer.count
          type: Gauge
          description: Number of timer instances currently active. Only available for .NET 6 or higher.
        - metric: process.runtime.dotnet.assemblies.count
          type: Gauge
          description: Number of .NET assemblies that are currently loaded.
        - metric: process.runtime.dotnet.exceptions.count
          type: Cumulative counter
          description: Count of exceptions thrown in managed code since the observation started.
- keys:
    - PROCESS
  instrumentedLibraries:
    - name: Process
  stability: beta
  supportabilityLevel: community
  dependencies:
    - name: Process Instrumentation for OpenTelemetry .NET
      link: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.Instrumentation.Process
      version: 0.5.0-beta.3
      stability: beta
  signals:
    - metrics:
        - metric: process.memory.usage
          type: Gauge
          description: The amount of physical memory allocated for this process.
        - metric: process.memory.virtual
          type: Gauge
          description: The amount of committed virtual memory for this process.
        - metric: process.cpu.time
          type: Cumulative counter
          description: Total CPU seconds broken down by different states, such as user and system.
        - metric: process.cpu.count
          type: Gauge
          description: Total CPU seconds broken down by different states, such as user and system.
        - metric: process.threads
          type: Gauge
          description: Process threads count.
- keys:
    - ILOGGER
  instrumentedLibraries:
    - name: Microsoft.Extensions.Logging
      supportedVersions: 6.0.0 and higher
  comment: Not supported on .NET Framework
  stability: beta
  supportabilityLevel: community
  signals:
    - logs: 
